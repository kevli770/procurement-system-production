<?xml version="1.0" encoding="UTF-8"?>
<!--
  IIS Configuration for Procurement System

  This web.config sets up IIS as a reverse proxy to the PM2-managed Next.js application.

  Prerequisites:
  - Application Request Routing (ARR) module installed
  - URL Rewrite module installed

  Application:
  - Backend: PM2 managing Next.js on localhost:3000
  - Frontend: IIS reverse proxy
  - Domain: http://procurementapp or http://procurementapp.domain.local
-->
<configuration>
  <system.webServer>

    <!-- URL Rewrite Rules -->
    <rewrite>
      <rules>

        <!-- Main Reverse Proxy Rule -->
        <rule name="Procurement-ReverseProxy" stopProcessing="true">
          <match url="(.*)" />
          <conditions logicalGrouping="MatchAll" trackAllCaptures="false">
            <!-- Don't proxy if file exists (for static files if needed) -->
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action
            type="Rewrite"
            url="http://localhost:3000/{R:1}"
            logRewrittenUrl="true" />

          <!-- Server Variables for forwarding client info to Next.js -->
          <serverVariables>
            <set name="HTTP_X_ORIGINAL_HOST" value="{HTTP_HOST}" />
            <set name="HTTP_X_FORWARDED_FOR" value="{REMOTE_ADDR}" />
            <set name="HTTP_X_FORWARDED_PROTO" value="{HTTPS}" />
            <set name="HTTP_X_REAL_IP" value="{REMOTE_ADDR}" />
          </serverVariables>
        </rule>

      </rules>

      <!-- Outbound Rules for Error Handling -->
      <outboundRules>
        <rule name="HealthCheckFailure" preCondition="CheckFor5xx">
          <match serverVariable="RESPONSE_STATUS" pattern="5\d{2}" />
          <action type="CustomResponse"
                  statusCode="503"
                  statusReason="Service Unavailable"
                  statusDescription="Backend service is temporarily unavailable. Please try again later." />
        </rule>

        <preConditions>
          <preCondition name="CheckFor5xx">
            <add input="{RESPONSE_STATUS}" pattern="5\d{2}" />
          </preCondition>
        </preConditions>
      </outboundRules>
    </rewrite>

    <!-- Application Request Routing Configuration -->
    <proxy>
      <!-- Preserve original host header -->
      <preserveHostHeader value="true" />

      <!-- Connection timeout (30 seconds) -->
      <timeout value="00:00:30" />

      <!-- Enable response buffering -->
      <responseBufferLimit value="0" />
    </proxy>

    <!-- Health Check Monitoring -->
    <!-- Note: This requires ARR 3.0+ and needs to be configured via IIS Manager -->
    <!-- Configuration → Application Request Routing → Server Farms → Health Test -->
    <!--
    <applicationRequestRouting>
      <healthCheck
        url="http://localhost:3000/api/health"
        interval="00:00:30"
        timeout="00:00:10"
        enabled="true" />
    </applicationRequestRouting>
    -->

    <!-- Security Headers -->
    <httpProtocol>
      <customHeaders>
        <!-- Prevent clickjacking -->
        <add name="X-Frame-Options" value="SAMEORIGIN" />

        <!-- Prevent MIME-sniffing -->
        <add name="X-Content-Type-Options" value="nosniff" />

        <!-- Enable XSS Protection -->
        <add name="X-XSS-Protection" value="1; mode=block" />

        <!-- Referrer Policy -->
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />

        <!-- Content Security Policy (adjust as needed) -->
        <!-- <add name="Content-Security-Policy" value="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" /> -->
      </customHeaders>
    </httpProtocol>

    <!-- WebSocket Support (for Next.js Fast Refresh in dev, not needed in production) -->
    <webSocket enabled="false" />

    <!-- Compression -->
    <urlCompression
      doStaticCompression="true"
      doDynamicCompression="true" />

    <!-- Static Content Caching (if serving static files directly) -->
    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="7.00:00:00" />
    </staticContent>

    <!-- Error Pages (optional - customize as needed) -->
    <!--
    <httpErrors errorMode="Custom" defaultResponseMode="ExecuteURL">
      <remove statusCode="404" />
      <remove statusCode="500" />
      <error statusCode="404" path="/404" responseMode="ExecuteURL" />
      <error statusCode="500" path="/500" responseMode="ExecuteURL" />
    </httpErrors>
    -->

    <!-- Request Filtering -->
    <security>
      <requestFiltering>
        <!-- Max request size: 100MB (for file uploads) -->
        <requestLimits maxAllowedContentLength="104857600" />

        <!-- Remove dangerous HTTP verbs -->
        <verbs allowUnlisted="true">
          <remove verb="TRACE" />
          <remove verb="TRACK" />
        </verbs>
      </requestFiltering>
    </security>

    <!-- Default Document (not needed for reverse proxy, but good to have) -->
    <defaultDocument enabled="false" />

    <!-- Directory Browsing (disabled) -->
    <directoryBrowse enabled="false" />

  </system.webServer>

  <!--
    ========================================
    SSL/HTTPS Configuration (Future Use)
    ========================================

    To enable HTTPS:
    1. Obtain or create SSL certificate
    2. Install certificate in Windows Certificate Store
    3. In IIS Manager → Sites → Procurement → Bindings:
       - Add new binding: HTTPS, Port 443, Select certificate
    4. Force HTTPS redirect (add this rule BEFORE the reverse proxy rule):

    <rule name="Force-HTTPS" stopProcessing="true">
      <match url="(.*)" />
      <conditions>
        <add input="{HTTPS}" pattern="off" />
      </conditions>
      <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
    </rule>

    5. Update environment variables:
       - NEXTAUTH_URL=https://procurementapp
       - NEXT_PUBLIC_APP_URL=https://procurementapp
  -->

</configuration>
